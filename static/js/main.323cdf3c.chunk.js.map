{"version":3,"sources":["components/Space Background/SpaceBackground.js","fonts/Starjedi.ttf","fonts/AurekBeshNarrow-xxlK.ttf","utils/Api.js","components/Planet/Levelthree/index.js","components/Planet/Leveltwo/index.js","components/Galaxy/Galaxy.js","components/Open/Title/Title.js","components/Open/Open.js","components/Modal.js","pages/Home.js","pages/Leveltwo.js","pages/Open.js","pages/Levelthree.js","components/SignupButton/index.js","components/LoginButton/index.js","pages/Profile.js","pages/Signup.js","pages/Login.js","components/Archive/index.js","components/PlanetArchive/index.js","pages/Archive.js","App.js","index.js"],"names":["canvas","document","createElement","width","window","innerWidth","height","innerHeight","brightness","brightnessB","starSize","starX","starY","context","getContext","fillStyle","fillRect","i","Math","floor","random","starColor","body","style","background","toDataURL","axios","get","name","LevelThree","image","birth_year","description","className","textAlign","src","alt","LevelTwo","planet_info","characters","diameter","rotation_period","orbital_period","img","surface","class","margin","display","backgroundImage","zIndex","Galaxy","props","data-name","onClick","handlePlanetClick","id","handleSurfaceClick","Title","useEffect","position","alignItems","marginTop","ByLine","React","lazy","Open","href","fallback","MODAL_STYLES","HEIGHT","OVERLAY_STYLES","backgroundColor","TweenMax","randomInRange","_","max","min","VELOCITY_INC","VELOCITY_INIT_INC","SIZE_INC","RAD","PI","WARP_COLORS","Star","STATE","alpha","angle","reset","vX","cos","vY","sin","travelled","iX","undefined","iY","active","x","y","size","this","generateStarPool","Array","fill","map","Modal","open","children","onClose","ReactDom","createPortal","getElementById","myJump","stars","bgAlpha","sizeInc","velocity","render","initiating","jumping","clearRect","nonActive","filter","s","length","star","iVX","iVY","newIX","newIY","newX","newY","caught","color","r","g","b","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","initiate","initiateTimestamp","Date","getTime","to","jump","setTimeout","enter","bind","addEventListener","setup","lineCap","click","e","appendChild","debounce","Home","useState","planet","setPlanet","planets","setPlanets","setCharacters","setSurface","isOpen","setIsOpen","getPlanet","getCharacters","API","then","res","data","catch","console","log","planetName","target","getAttribute","surface_img","character","Leveltwo","openApp","Levelthree","planChar","setPlanChar","SignupButton","role","LoginButton","type","Profile","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","placeholder","fetch","method","JSON","stringify","headers","response","location","replace","for","SignupForm","username","password","confirmPassword","email","signupState","setSignupState","onChange","value","preventDefault","newUserInfo","json","userInfo","status","alert","LoginForm","loginState","setLoginState","Charchive","mass","planet_name","eye_color","skin_color","hair_color","Planetarchive","climate","gravity","terrain","surface_water","population","Archive","getPlanets","plan","App","exact","path","component","Trials","Login","Signup","ReactDOM"],"mappings":"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","file":"static/js/main.323cdf3c.chunk.js","sourcesContent":["// you can copy this script tag into a separate javascript file, include it\n// anywhere on the page, and then place a canvas with the id \"hyperspeed-canvas\"\n// anywhere in the html.\n//\n// based off the code at http://minimal.be/lab/fluGL/\n// (function () {\n// \t/**\n// \t * Easing function used to animate going in and out of hyperspeed\n// \t * from http://easings.net/#easeInOutQuart\n// \t * @param  Number t current time\n// \t * @param  Number b beginning value\n// \t * @param  Number c change in value\n// \t * @param  Number d duration\n// \t * @return Number\n// \t */\n// \tvar easeInOutQuart = function (t, b, c, d) {\n// \t\tif ((t /= d / 2) < 1) return (c / 2) * t * t * t * t + b;\n// \t\treturn (-c / 2) * ((t -= 2) * t * t * t - 2) + b;\n// \t};\n\n// \tdocument.getElementById('hyperspeed-canvas').style.width =\n// \t\twindow.innerWidth + 'px';\n// \tdocument.getElementById('hyperspeed-canvas').style.height =\n// \t\twindow.innerHeight + 'px';\n\n// \t/**\n// \t * StarField object\n// \t * @param Number pointSize how big are the stars\n// \t * @param Number numStars  how many stars are there\n// \t */\n// \tvar StarField = function (pointSize, numStars, speed) {\n// \t\tthis.pointSize = pointSize;\n// \t\tthis.numStars = numStars;\n// \t\tthis.speed = speed;\n// \t\tthis.lineLength = 0.0;\n\n// \t\tvar timers = {\n// \t\t\tspeed: 0,\n// \t\t\tlineLength: 0,\n// \t\t};\n\n// \t\tvar animateProperty = function (property, to, duration) {\n// \t\t\twindow.cancelAnimationFrame(timers[property]);\n// \t\t\tvar self = this;\n// \t\t\tvar start = new Date().getTime();\n// \t\t\tvar from = self[property];\n// \t\t\tvar animate = function () {\n// \t\t\t\tvar dt = new Date().getTime() - start;\n// \t\t\t\tif (dt >= duration) {\n// \t\t\t\t\tself[property] = to;\n// \t\t\t\t} else {\n// \t\t\t\t\tself[property] = easeInOutQuart(\n// \t\t\t\t\t\tdt,\n// \t\t\t\t\t\tfrom,\n// \t\t\t\t\t\tto - from,\n// \t\t\t\t\t\tduration\n// \t\t\t\t\t);\n// \t\t\t\t\ttimers[property] = window.requestAnimationFrame(animate);\n// \t\t\t\t}\n// \t\t\t};\n// \t\t\tanimate();\n// \t\t};\n\n// \t\tthis.animateSpeed = function (to, duration) {\n// \t\t\treturn animateProperty.call(this, 'speed', to, duration);\n// \t\t};\n// \t\tthis.animateLineLength = function (to, duration) {\n// \t\t\treturn animateProperty.call(this, 'lineLength', to, duration);\n// \t\t};\n// \t};\n\n// \t/**\n// \t * gets the verticies array\n// \t * @param  Scene scene\n// \t * @return Float32Array\n// \t */\n// \tStarField.prototype.getVertices = function (scene) {\n// \t\tif (this.vertices) {\n// \t\t\treturn this.vertices;\n// \t\t}\n// \t\tvar vertices = [];\n// \t\tvar tmpVertex = [];\n// \t\tvar ratio = scene.canvas.width / scene.canvas.height;\n// \t\tfor (var i = 0; i < this.numStars; i++) {\n// \t\t\ttmpVertex = [\n// \t\t\t\t(Math.random() * 2 - 1) * ratio,\n// \t\t\t\tMath.random() * 2 - 1,\n// \t\t\t\tMath.random() * 2 - 1,\n// \t\t\t];\n// \t\t\tvertices.push(tmpVertex[0], tmpVertex[1], tmpVertex[2]);\n// \t\t\tvertices.push(\n// \t\t\t\ttmpVertex[0],\n// \t\t\t\ttmpVertex[1],\n// \t\t\t\ttmpVertex[2] + this.lineLength\n// \t\t\t);\n// \t\t}\n// \t\tthis.vertices = new Float32Array(vertices);\n// \t\treturn this.vertices;\n// \t};\n\n// \t/**\n// \t * Scene object\n// \t * @param Node canvas\n// \t */\n// \tvar Scene = function (canvas) {\n// \t\tthis.canvas = canvas;\n\n// \t\tthis.gl = canvas.getContext('experimental-webgl');\n// \t\t// Check whether the WebGL context is available or not\n// \t\tif (!this.gl) {\n// \t\t\tconsole.log(\"There's no WebGL context available.\");\n// \t\t} else {\n// \t\t\tthis.init();\n// \t\t}\n// \t};\n\n// \t/**\n// \t * Set the viewport to the canvas width and height\n// \t * @return {[type]} [description]\n// \t */\n// \tScene.prototype.setupViewport = function () {\n// \t\tthis.canvas.width = this.canvas.offsetWidth;\n// \t\tthis.canvas.height = this.canvas.offsetHeight;\n// \t\tthis.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n// \t};\n\n// \t/**\n// \t * gets the vertex shader\n// \t */\n// \tScene.prototype.getVertexShader = function () {\n// \t\tvar gl = this.gl;\n// \t\tvar vertexShaderText;\n// \t\tvar vertexShader;\n// \t\tif (this.vertexShader) {\n// \t\t\treturn this.vertexShader;\n// \t\t}\n// \t\tvertexShaderText =\n// \t\t\t'' +\n// \t\t\t'varying float zPos;\\n' +\n// \t\t\t'attribute vec3 vertexPosition;\\n' +\n// \t\t\t'attribute float pointSize;\\n' +\n// \t\t\t'uniform mat4 perspectiveMatrix;\\n' +\n// \t\t\t'void main(void) {\\n' +\n// \t\t\t'  zPos = vertexPosition[2];\\n' +\n// \t\t\t'  gl_PointSize = pointSize * (1.0 - vertexPosition[2]);\\n' +\n// \t\t\t'  gl_Position = perspectiveMatrix * vec4(vertexPosition, 1.0);\\n' +\n// \t\t\t'}';\n// \t\tvertexShader = gl.createShader(gl.VERTEX_SHADER);\n// \t\tgl.shaderSource(vertexShader, vertexShaderText);\n// \t\tgl.compileShader(vertexShader);\n// \t\tif (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n// \t\t\tconsole.log(\"Couldn't compile the vertex shader\");\n// \t\t\tgl.deleteShader(vertexShader);\n// \t\t\tthis.gl = gl;\n// \t\t\treturn;\n// \t\t}\n// \t\tthis.gl = gl;\n// \t\treturn vertexShader;\n// \t};\n\n// \t/**\n// \t * gets the fragment shader\n// \t */\n// \tScene.prototype.getFragmentShader = function () {\n// \t\tvar fragmentShaderText;\n// \t\tvar fragmentShader;\n// \t\tvar gl = this.gl;\n// \t\tif (this.fragmentShader) {\n// \t\t\treturn this.fragmentShader;\n// \t\t}\n// \t\tfragmentShaderText =\n// \t\t\t'' +\n// \t\t\t'#ifdef GL_ES\\n' +\n// \t\t\t'  precision highp float;\\n' +\n// \t\t\t'#endif\\n' +\n// \t\t\t'varying float zPos;\\n' +\n// \t\t\t'void main(void) {\\n' +\n// \t\t\t'  gl_FragColor = vec4(1, 1, 1, zPos);\\n' +\n// \t\t\t'}';\n// \t\tfragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n// \t\tgl.shaderSource(fragmentShader, fragmentShaderText);\n// \t\tgl.compileShader(fragmentShader);\n// \t\tif (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n// \t\t\tconsole.log(\"Couldn't compile the fragment shader\");\n// \t\t\tgl.deleteShader(fragmentShader);\n// \t\t\tthis.gl = gl;\n// \t\t\treturn;\n// \t\t}\n// \t\tthis.gl = gl;\n// \t\treturn fragmentShader;\n// \t};\n\n// \t/**\n// \t * Sets up the WebGL shader program\n// \t */\n// \tScene.prototype.setupShaderProgram = function () {\n// \t\tvar vertexPosition;\n// \t\tvar gl = this.gl;\n// \t\tvar vertexShader = this.getVertexShader();\n// \t\tvar fragmentShader = this.getFragmentShader();\n\n// \t\t// Create a shader program.\n// \t\tgl.program = gl.createProgram();\n// \t\tgl.attachShader(gl.program, vertexShader);\n// \t\tgl.attachShader(gl.program, fragmentShader);\n// \t\tgl.linkProgram(gl.program);\n// \t\tif (!gl.getProgramParameter(gl.program, gl.LINK_STATUS)) {\n// \t\t\tconsole.log('Unable to initialise shaders');\n// \t\t\tgl.deleteProgram(gl.program);\n// \t\t\tgl.deleteProgram(vertexShader);\n// \t\t\tgl.deleteProgram(fragmentShader);\n// \t\t\treturn;\n// \t\t}\n// \t\t// Install the program as part of the current rendering state\n// \t\tgl.useProgram(gl.program);\n// \t\t// Get the vertexPosition attribute from the linked shader program\n// \t\tvertexPosition = gl.getAttribLocation(gl.program, 'vertexPosition');\n// \t\t// Enable the vertexPosition vertex attribute array. If enabled, the array\n// \t\t// will be accessed an used for rendering when calls are made to commands like\n// \t\t// gl.drawArrays, gl.drawElements, etc.\n// \t\tgl.enableVertexAttribArray(vertexPosition);\n\n// \t\t// Clear the color buffer (r, g, b, a) with the specified color\n// \t\tgl.clearColor(0.0, 0.0, 0.0, 1.0);\n// \t\t// Clear the depth buffer. The value specified is clamped to the range [0,1].\n// \t\t// More info about depth buffers: http://en.wikipedia.org/wiki/Depth_buffer\n// \t\tgl.clearDepth(1.0);\n// \t\t// Enable depth testing. This is a technique used for hidden surface removal.\n// \t\t// It assigns a value (z) to each pixel that represents the distance from this\n// \t\t// pixel to the viewer. When another pixel is drawn at the same location the z\n// \t\t// values are compared in order to determine which pixel should be drawn.\n// \t\t//gl.enable(gl.DEPTH_TEST);\n// \t\tgl.enable(gl.BLEND);\n// \t\tgl.disable(gl.DEPTH_TEST);\n// \t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n// \t\t// Specify which function to use for depth buffer comparisons. It compares the\n// \t\t// value of the incoming pixel against the one stored in the depth buffer.\n// \t\t// Possible values are (from the OpenGL documentation):\n// \t\t// GL_NEVER - Never passes.\n// \t\t// GL_LESS - Passes if the incoming depth value is less than the stored depth value.\n// \t\t// GL_EQUAL - Passes if the incoming depth value is equal to the stored depth value.\n// \t\t// GL_LEQUAL - Passes if the incoming depth value is less than or equal to the stored depth value.\n// \t\t// GL_GREATER - Passes if the incoming depth value is greater than the stored depth value.\n// \t\t// GL_NOTEQUAL - Passes if the incoming depth value is not equal to the stored depth value.\n// \t\t// GL_GEQUAL - Passes if the incoming depth value is greater than or equal to the stored depth value.\n// \t\t// GL_ALWAYS - Always passes.\n// \t\t//gl.depthFunc(gl.LEQUAL);\n// \t\tthis.gl = gl;\n// \t};\n\n// \t/**\n// \t * Sets up the field of view for the WebGL viewport\n// \t * http://en.wikipedia.org/wiki/Viewing_frustum\n// \t */\n// \tScene.prototype.setupFieldOfView = function () {\n// \t\tvar gl = this.gl;\n\n// \t\t// Define the viewing frustum parameters\n// \t\t// More info: http://en.wikipedia.org/wiki/Viewing_frustum\n// \t\t// More info: http://knol.google.com/k/view-frustum\n// \t\tvar fieldOfView = 45.0;\n// \t\tvar aspectRatio = this.canvas.width / this.canvas.height;\n// \t\tvar nearPlane = 1.0;\n// \t\tvar farPlane = 5.0;\n// \t\tvar top = nearPlane * Math.tan((fieldOfView * Math.PI) / 360.0);\n// \t\tvar bottom = -top;\n// \t\tvar right = top * aspectRatio;\n// \t\tvar left = -right;\n\n// \t\t//  Create the perspective matrix. The OpenGL function that's normally used for this,\n// \t\t//  glFrustum() is not included in the WebGL API. That's why we have to do it manually here.\n// \t\t//  More info: http://www.cs.utk.edu/~vose/c-stuff/opengl/glFrustum.html\n// \t\tvar a = (right + left) / (right - left);\n// \t\tvar b = (top + bottom) / (top - bottom);\n// \t\tvar c = (farPlane + nearPlane) / (farPlane - nearPlane);\n// \t\tvar d = (2 * farPlane * nearPlane) / (farPlane - nearPlane);\n// \t\tvar x = (2 * nearPlane) / (right - left);\n// \t\tvar y = (2 * nearPlane) / (top - bottom);\n// \t\tvar perspectiveMatrix = [\n// \t\t\tx,\n// \t\t\t0,\n// \t\t\ta,\n// \t\t\t0,\n// \t\t\t0,\n// \t\t\ty,\n// \t\t\tb,\n// \t\t\t0,\n// \t\t\t0,\n// \t\t\t0,\n// \t\t\tc,\n// \t\t\td,\n// \t\t\t0,\n// \t\t\t0,\n// \t\t\t-1,\n// \t\t\t0,\n// \t\t];\n\n// \t\t// Get the location of the \"perspectiveMatrix\" uniform variable from the\n// \t\t// shader program\n// \t\tvar uPerspectiveMatrix = gl.getUniformLocation(\n// \t\t\tgl.program,\n// \t\t\t'perspectiveMatrix'\n// \t\t);\n// \t\tgl.uniformMatrix4fv(\n// \t\t\tuPerspectiveMatrix,\n// \t\t\tfalse,\n// \t\t\tnew Float32Array(perspectiveMatrix)\n// \t\t);\n\n// \t\tthis.gl = gl;\n// \t};\n\n// \t/**\n// \t * Initializes the scene\n// \t */\n// \tScene.prototype.init = function () {\n// \t\tthis.setupViewport();\n// \t\tthis.vertexShader = this.getVertexShader();\n// \t\tthis.fragmentShader = this.getFragmentShader();\n// \t\tthis.setupShaderProgram();\n// \t\tthis.setupFieldOfView();\n// \t};\n\n// \t/**\n// \t * loads a starfield into a scene\n// \t * @param  StarField starField\n// \t * @return Function function to draw the scene\n// \t */\n// \tScene.prototype.loadStarField = function (starField) {\n// \t\tvar self = this;\n// \t\tvar gl = this.gl;\n\n// \t\t// First create a vertex buffer in which we can store our data.\n// \t\tvar vertexBuffer = gl.createBuffer();\n\n// \t\t// Get the vertex position attribute location from the shader program\n// \t\tvar aVertexPosition = gl.getAttribLocation(\n// \t\t\tgl.program,\n// \t\t\t'vertexPosition'\n// \t\t);\n\n// \t\t// Get the point size attribute location from the shader program\n// \t\tvar aPointSize = gl.getAttribLocation(gl.program, 'pointSize');\n\n// \t\t// get the verticies from the StarField\n// \t\tvar vertices = starField.getVertices(this);\n\n// \t\t// get the point size from the StarField\n// \t\tvar pointSize = starField.pointSize;\n\n// \t\t// Bind the buffer object to the ARRAY_BUFFER target.\n// \t\tgl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n\n// \t\t// Creates a new data store for the vertices array which is bound to the ARRAY_BUFFER.\n// \t\t// The third paramater indicates the usage pattern of the data store. Possible values are\n// \t\t// (from the OpenGL documentation):\n// \t\t// The frequency of access may be one of these:\n// \t\t// STREAM - The data store contents will be modified once and used at most a few times.\n// \t\t// STATIC - The data store contents will be modified once and used many times.\n// \t\t// DYNAMIC - The data store contents will be modified repeatedly and used many times.\n// \t\t// The nature of access may be one of these:\n// \t\t// DRAW - The data store contents are modified by the application, and used as the source for\n// \t\t//        GL drawing and image specification commands.\n// \t\t// READ - The data store contents are modified by reading data from the GL, and used to return\n// \t\t//        that data when queried by the application.\n// \t\t// COPY - The data store contents are modified by reading data from the GL, and used as the source\n// \t\t//        for GL drawing and image specification commands.\n// \t\tgl.bufferData(gl.ARRAY_BUFFER, vertices, gl.DYNAMIC_DRAW);\n\n// \t\t// Clear the color buffer and the depth buffer\n// \t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n// \t\t// Specify the location and format of the vertex position attribute\n// \t\tgl.vertexAttribPointer(aVertexPosition, 3.0, gl.FLOAT, false, 0, 0);\n\n// \t\t// Specify the location and format of the point size attribute\n// \t\tgl.vertexAttrib1f(aPointSize, pointSize);\n// \t\tthis.gl = gl;\n\n// \t\treturn function () {\n// \t\t\tvar midpoint;\n// \t\t\tvar halfLineLength = starField.lineLength / 2;\n// \t\t\tfor (var i = 0; i < vertices.length; i += 6) {\n// \t\t\t\tif (vertices[i + 5] < -1) {\n// \t\t\t\t\tvertices[i + 5] = 0.999;\n// \t\t\t\t\tvertices[i + 2] = 0.999 - starField.lineLength;\n// \t\t\t\t}\n// \t\t\t\tif (vertices[i + 2] > 1) {\n// \t\t\t\t\tvertices[i + 2] = -0.999;\n// \t\t\t\t\tvertices[i + 5] = -0.999 + starField.lineLength;\n// \t\t\t\t}\n// \t\t\t\tmidpoint = (vertices[i + 2] + vertices[i + 5]) / 2;\n// \t\t\t\tvertices[i + 2] = midpoint - starField.speed - halfLineLength;\n// \t\t\t\tvertices[i + 5] = midpoint - starField.speed + halfLineLength;\n// \t\t\t}\n// \t\t\tself.gl.lineWidth(3);\n// \t\t\tself.gl.bufferData(\n// \t\t\t\tself.gl.ARRAY_BUFFER,\n// \t\t\t\tvertices,\n// \t\t\t\tself.gl.DYNAMIC_DRAW\n// \t\t\t);\n\n// \t\t\tself.gl.clear(self.gl.COLOR_BUFFER_BIT | self.gl.DEPTH_BUFFER_BIT);\n// \t\t\tself.gl.drawArrays(self.gl.POINTS, 0, starField.numStars);\n// \t\t\tself.gl.drawArrays(self.gl.LINES, 0, starField.numStars);\n// \t\t\tself.gl.flush();\n// \t\t};\n// \t};\n\n// \t/**\n// \t * initializes the animation loop\n// \t * @param  Function draw\n// \t */\n// \tScene.prototype.animate = function (draw) {\n// \t\tvar animate = function () {\n// \t\t\twindow.requestAnimationFrame(animate);\n// \t\t\tdraw();\n// \t\t};\n// \t\tanimate();\n// \t};\n\n// \twindow.addEventListener(\n// \t\t'load',\n// \t\tfunction () {\n// \t\t\tvar draw;\n// \t\t\tvar warp;\n// \t\t\tvar timeouts = [];\n// \t\t\tvar starField = new StarField(5, 20000, 0.00005);\n\n// \t\t\tvar scene = new Scene(document.getElementById('hyperspeed-canvas'));\n// \t\t\tvar trigger = document.getElementById('js-hpstar-trigger');\n// \t\t\tif (scene.gl) {\n// \t\t\t\tdraw = scene.loadStarField(starField);\n// \t\t\t\tscene.animate(draw);\n\n// \t\t\t\twarp = function () {\n// \t\t\t\t\tfor (var i = 0; i < timeouts.length; i++) {\n// \t\t\t\t\t\twindow.clearTimeout(timeouts[i]);\n// \t\t\t\t\t}\n// \t\t\t\t\ttimeouts = [];\n// \t\t\t\t\tstarField.animateLineLength(0.5, 3000);\n// \t\t\t\t\tstarField.animateSpeed(0.02, 1000);\n// \t\t\t\t\ttimeouts.push(\n// \t\t\t\t\t\twindow.setTimeout(function () {\n// \t\t\t\t\t\t\tstarField.animateSpeed(0.00005, 500);\n// \t\t\t\t\t\t\tstarField.animateLineLength(0, 500);\n// \t\t\t\t\t\t}, 4000)\n// \t\t\t\t\t);\n// \t\t\t\t};\n\n// \t\t\t\t// scene.canvas.addEventListener('mouseup', warp, false );\n// \t\t\t\t// scene.canvas.addEventListener('touchend', warp, false );\n// \t\t\t\t// $('.hpstar-trigger').click(warp);\n// \t\t\t\tdocument.addEventListener('mousedown', warp, true);\n// \t\t\t\tdocument.addEventListener('keydown', function (e) {\n// \t\t\t\t\tvar key = e.which || e.keyCode;\n// \t\t\t\t\tif (key === 13) {\n// \t\t\t\t\t\t// 13 is enter\n// \t\t\t\t\t\twarp();\n// \t\t\t\t\t}\n// \t\t\t\t});\n// \t\t\t}\n// \t\t},\n// \t\tfalse\n// \t);\n// })();\n\n// ***************************** END NEW\n\n// /*BACKGROUND*/\n\nvar canvas = document.createElement('canvas');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nvar context = canvas.getContext('2d');\ncontext.fillStyle = 'rgb(0,0,0)';\ncontext.fillRect(0, 0, canvas.width, canvas.height);\n\nvar brightness;\n\nvar brightnessB;\n\nvar starSize;\nvar starX;\nvar starY;\n\nfor (var i = 0; i < 2400; i++) {\n\tbrightness = Math.floor(Math.random() * 128);\n\tbrightnessB = Math.floor(Math.random() * 50 + 1);\n\n\tif (i % 2 == 0) {\n\t\t//white star\n\t\tbrightnessB = brightness;\n\t} else if (i % 3 == 0) {\n\t\t// blue star\n\t\tbrightnessB = brightnessB + brightness;\n\t} else {\n\t\t// yellow star\n\t\tbrightnessB = brightness - brightnessB;\n\t}\n\n\t//large stars every once in a while\n\tif (i % 25 == 0) {\n\t\tstarSize = Math.floor(Math.random() * 2) + 1;\n\t} else {\n\t\tstarSize = 1;\n\t}\n\n\tvar starColor =\n\t\t'rgba(' + brightness + ',' + brightness + ',' + brightnessB + ',255)';\n\n\tcontext.fillStyle = starColor;\n\n\tstarX = Math.random() * canvas.width;\n\tstarY = Math.random() * canvas.height;\n\n\tcontext.fillRect(starX, starY, starSize, starSize);\n}\n\ndocument.body.style.background = 'url(' + canvas.toDataURL('image/png') + ')';\n\n// ********************************************************************//\n\n// const { TweenMax, _ } = window;\n// /**\n//  * Utility function for returning a random integer in a given range\n//  * @param {Int} max\n//  * @param {Int} min\n//  */\n// const randomInRange = (max, min) =>\n// \tMath.floor(Math.random() * (max - min + 1)) + min;\n// const ACTIVE_PROBABILITY = 0;\n// const BASE_SIZE = 1;\n// const VELOCITY_INC = 1.01;\n// const VELOCITY_INIT_INC = 1.025;\n// const JUMP_VELOCITY_INC = 1.25;\n// const JUMP_SIZE_INC = 1.15;\n// const SIZE_INC = 1.01;\n// const RAD = Math.PI / 180;\n// const WARP_COLORS = [\n// \t[197, 239, 247],\n// \t[25, 181, 254],\n// \t[77, 5, 232],\n// \t[165, 55, 253],\n// \t[255, 255, 255],\n// ];\n// /**\n//  * Class for storing the particle metadata\n//  * position, size, length, speed etc.\n//  */\n// class Star {\n// \tSTATE = {\n// \t\talpha: Math.random(),\n// \t\tangle: randomInRange(0, 360) * RAD,\n// \t};\n// \treset = () => {\n// \t\tconst angle = randomInRange(0, 360) * (Math.PI / 180);\n// \t\tconst vX = Math.cos(angle);\n// \t\tconst vY = Math.sin(angle);\n// \t\tconst travelled =\n// \t\t\tMath.random() > 0.5\n// \t\t\t\t? Math.random() *\n// \t\t\t\t\t\tMath.max(window.innerWidth, window.innerHeight) +\n// \t\t\t\t  Math.random() * (window.innerWidth * 0.24)\n// \t\t\t\t: Math.random() * (window.innerWidth * 0.25);\n// \t\tthis.STATE = {\n// \t\t\t...this.STATE,\n// \t\t\tiX: undefined,\n// \t\t\tiY: undefined,\n// \t\t\tactive: travelled ? true : false,\n// \t\t\tx: Math.floor(vX * travelled) + window.innerWidth / 2,\n// \t\t\tvX,\n// \t\t\ty: Math.floor(vY * travelled) + window.innerHeight / 2,\n// \t\t\tvY,\n// \t\t\tsize: BASE_SIZE,\n// \t\t};\n// \t};\n// \tconstructor() {\n// \t\tthis.reset();\n// \t}\n// }\n\n// const generateStarPool = (size) => new Array(size).fill().map(() => new Star());\n\n// // Class for the actual app\n// // Not too much happens in here\n// // Initiate the drawing process and listen for user interactions 👍\n// class JumpToHyperspace {\n// \tSTATE = {\n// \t\tstars: generateStarPool(300),\n// \t\tbgAlpha: 0,\n// \t\tsizeInc: SIZE_INC,\n// \t\tvelocity: VELOCITY_INC,\n// \t};\n// \tcanvas = document.createElement('canvas');\n// \tcontext = this.canvas.getContext('2d');\n// \tconstructor() {\n// \t\tthis.bind();\n// \t\tthis.setup();\n// \t\tdocument.body.appendChild(this.canvas);\n// \t\tthis.render();\n// \t}\n// \trender = () => {\n// \t\tconst {\n// \t\t\tSTATE: { bgAlpha, velocity, sizeInc, initiating, jumping, stars },\n// \t\t\tcontext,\n// \t\t\trender,\n// \t\t} = this;\n// \t\t// Clear the canvas\n// \t\tcontext.clearRect(0, 0, window.innerWidth, window.innerHeight);\n// \t\tif (bgAlpha > 0) {\n// \t\t\tcontext.fillStyle = `rgba(31, 58, 157, ${bgAlpha})`;\n// \t\t\tcontext.fillRect(0, 0, window.innerWidth, window.innerHeight);\n// \t\t}\n// \t\t// 1. Shall we add a new star\n// \t\tconst nonActive = stars.filter((s) => !s.STATE.active);\n// \t\tif (!initiating && nonActive.length > 0) {\n// \t\t\t// Introduce a star\n// \t\t\tnonActive[0].STATE.active = true;\n// \t\t}\n// \t\t// 2. Update the stars and draw them.\n// \t\tfor (const star of stars.filter((s) => s.STATE.active)) {\n// \t\t\tconst { active, x, y, iX, iY, iVX, iVY, size, vX, vY } = star.STATE;\n// \t\t\t// Check if the star needs deactivating\n// \t\t\tif (\n// \t\t\t\t((iX || x) < 0 ||\n// \t\t\t\t\t(iX || x) > window.innerWidth ||\n// \t\t\t\t\t(iY || y) < 0 ||\n// \t\t\t\t\t(iY || y) > window.innerHeight) &&\n// \t\t\t\tactive &&\n// \t\t\t\t!initiating\n// \t\t\t) {\n// \t\t\t\tstar.reset(true);\n// \t\t\t} else if (active) {\n// \t\t\t\tconst newIX = initiating ? iX : iX + iVX;\n// \t\t\t\tconst newIY = initiating ? iY : iY + iVY;\n// \t\t\t\tconst newX = x + vX;\n// \t\t\t\tconst newY = y + vY;\n// \t\t\t\t// Just need to work out if it overtakes the original line that's all\n// \t\t\t\tconst caught =\n// \t\t\t\t\t(vX < 0 && newIX < x) ||\n// \t\t\t\t\t(vX > 0 && newIX > x) ||\n// \t\t\t\t\t(vY < 0 && newIY < y) ||\n// \t\t\t\t\t(vY > 0 && newIY > y);\n// \t\t\t\tstar.STATE = {\n// \t\t\t\t\t...star.STATE,\n// \t\t\t\t\tiX: caught ? undefined : newIX,\n// \t\t\t\t\tiY: caught ? undefined : newIY,\n// \t\t\t\t\tiVX: caught ? undefined : iVX * VELOCITY_INIT_INC,\n// \t\t\t\t\tiVY: caught ? undefined : iVY * VELOCITY_INIT_INC,\n// \t\t\t\t\tx: newX,\n// \t\t\t\t\tvX: star.STATE.vX * velocity,\n// \t\t\t\t\ty: newY,\n// \t\t\t\t\tvY: star.STATE.vY * velocity,\n// \t\t\t\t\tsize: initiating\n// \t\t\t\t\t\t? size\n// \t\t\t\t\t\t: size * (iX || iY ? SIZE_INC : sizeInc),\n// \t\t\t\t};\n// \t\t\t\tlet color = `rgba(255, 255, 255, ${star.STATE.alpha})`;\n// \t\t\t\tif (jumping) {\n// \t\t\t\t\tconst [r, g, b] = WARP_COLORS[\n// \t\t\t\t\t\trandomInRange(0, WARP_COLORS.length)\n// \t\t\t\t\t];\n// \t\t\t\t\tcolor = `rgba(${r}, ${g}, ${b}, ${star.STATE.alpha})`;\n// \t\t\t\t}\n// \t\t\t\tcontext.strokeStyle = color;\n// \t\t\t\tcontext.lineWidth = size;\n// \t\t\t\tcontext.beginPath();\n// \t\t\t\tcontext.moveTo(star.STATE.iX || x, star.STATE.iY || y);\n// \t\t\t\tcontext.lineTo(star.STATE.x, star.STATE.y);\n// \t\t\t\tcontext.stroke();\n// \t\t\t}\n// \t\t}\n// \t\trequestAnimationFrame(render);\n// \t};\n// \tinitiate = () => {\n// \t\tif (this.STATE.jumping || this.STATE.initiating) return;\n// \t\tthis.STATE = {\n// \t\t\t...this.STATE,\n// \t\t\tinitiating: true,\n// \t\t\tinitiateTimestamp: new Date().getTime(),\n// \t\t};\n// \t\tTweenMax.to(this.STATE, 0.25, {\n// \t\t\tvelocity: VELOCITY_INIT_INC,\n// \t\t\tbgAlpha: 0.3,\n// \t\t});\n// \t\t// When we initiate, stop the XY origin from moving so that we draw\n// \t\t// longer lines until the jump\n// \t\tfor (const star of this.STATE.stars.filter((s) => s.STATE.active)) {\n// \t\t\tstar.STATE = {\n// \t\t\t\t...star.STATE,\n// \t\t\t\tiX: star.STATE.x,\n// \t\t\t\tiY: star.STATE.y,\n// \t\t\t\tiVX: star.STATE.vX,\n// \t\t\t\tiVY: star.STATE.vY,\n// \t\t\t};\n// \t\t}\n// \t};\n// \tjump = () => {\n// \t\tthis.STATE = {\n// \t\t\t...this.STATE,\n// \t\t\tbgAlpha: 0,\n// \t\t\tjumping: true,\n// \t\t};\n// \t\tTweenMax.to(this.STATE, 0.25, {\n// \t\t\tvelocity: JUMP_VELOCITY_INC,\n// \t\t\tbgAlpha: 0.75,\n// \t\t\tsizeInc: JUMP_SIZE_INC,\n// \t\t});\n// \t\tsetTimeout(() => {\n// \t\t\tthis.STATE = {\n// \t\t\t\t...this.STATE,\n// \t\t\t\tjumping: false,\n// \t\t\t};\n// \t\t\tTweenMax.to(this.STATE, 0.25, {\n// \t\t\t\tbgAlpha: 0,\n// \t\t\t\tvelocity: VELOCITY_INC,\n// \t\t\t\tsizeInc: SIZE_INC,\n// \t\t\t});\n// \t\t}, 5000);\n// \t};\n// \tenter = () => {\n// \t\tif (this.STATE.jumping) return;\n// \t\tconst { initiateTimestamp } = this.STATE;\n// \t\tthis.STATE = {\n// \t\t\t...this.STATE,\n// \t\t\tinitiating: false,\n// \t\t\tinitiateTimestamp: undefined,\n// \t\t};\n// \t\tif (new Date().getTime() - initiateTimestamp > 600) {\n// \t\t\tthis.jump();\n// \t\t} else {\n// \t\t\tTweenMax.to(this.STATE, 0.25, {\n// \t\t\t\tvelocity: VELOCITY_INC,\n// \t\t\t\tbgAlpha: 0,\n// \t\t\t});\n// \t\t}\n// \t};\n// \tbind = () => {\n// \t\tthis.canvas.addEventListener('mousedown', this.initiate);\n// \t\tthis.canvas.addEventListener('touchstart', this.initiate);\n// \t\tthis.canvas.addEventListener('mouseup', this.enter);\n// \t\tthis.canvas.addEventListener('touchend', this.enter);\n// \t};\n// \tsetup = () => {\n// \t\tthis.context.lineCap = 'round';\n// \t\tthis.canvas.height = window.innerHeight;\n// \t\tthis.canvas.width = window.innerWidth;\n// \t};\n// \treset = () => {\n// \t\tthis.STATE = {\n// \t\t\t...this.STATE,\n// \t\t\tstars: generateStarPool(300),\n// \t\t};\n// \t\tthis.setup();\n// \t};\n// }\n// window.myJump = new JumpToHyperspace();\n// window.addEventListener(\n// \t'visit-btn',\n// \tdebounce(() => {\n// \t\twindow.myJump.reset();\n// \t}, 250)\n// );\n","export default __webpack_public_path__ + \"static/media/Starjedi.8d577dc1.ttf\";","export default __webpack_public_path__ + \"static/media/AurekBeshNarrow-xxlK.440c9105.ttf\";","import axios from \"axios\";\n\nexport default {\n\n  getCharacters: function() {\n    return axios.get(\"/api/character\");\n  },\n  getCharacter: function(id) {\n    return axios.get(\"/api/character/\" + id);\n  },\n  // Gets all posts\n  getPlanets: function() {\n    return axios.get(\"/api/planet\");\n  },\n  // Gets the post with the given id\n  getPlanet: function(name) {\n    return axios.get(\"/api/planet/\" + name);\n  },\n\n  getUsers: function() {\n    return axios.get(\"/api/users\");\n  },\n\n  getUser: function(id) {\n    return axios.get(\"/api/users/\" + id);\n  },\n\n\n\n\n\n\n\n\n//   // Deletes the post with the given id\n//   deletePost: function(id) {\n//     return axios.delete(\"/api/posts/\" + id);\n//   },\n//   // Saves a post to the database\n//   savePost: function(postData) {\n//     return axios.post(\"/api/posts\", postData);\n//   }\n};\n","import React from \"react\";\n\nfunction LevelThree({ name, image, description, birth_year }) {\n    return (\n    <div className=\"\" style={{textAlign:\"center\"}}>\n        {/* <Carousel> */}\n        \n        {image ? (\n        <div>\n        \n        <img src= {`/${image}`} alt='' />\n        <h3>Name: {name}</h3> <br />\n        Birth year: {birth_year} < br/>\n        {/* {image} */}\n\n        <br />\n        \n        </div>\n        ): (<div></div>)}\n        {/* </Carousel> */}\n    </div>\n    )\n}\nexport default LevelThree;","import React from \"react\";\n// import Orbit from \"../../Orbit/Orbit\"\nimport Characsel from \"../../Carousel\"\n\nfunction LevelTwo({ name, characters, diameter, rotation_period, orbital_period, planet_info, img, surface }) {\n    return (\n        <div className='planet-data row' >\n            {!surface ? (\n                <div>\n            <h3>{name}</h3> <br />\n            {/* Diameter: {diameter} km<br/>\n            Rotation period: {rotation_period} days<br /> \n            Orbital period: {orbital_period} yrs<br/><br />   */}\n            {planet_info} <br /> \n            <br />\n            </div>\n            ): (<div />)}\n            {img && !surface ? (<img src={`/${img}`} class='' style={{width: '600px', margin: '0 auto', textAlign: 'center', display: 'flex' }} alt=''/>) : (<img src={`/${surface}`} alt='' style={{backgroundImage: `/${surface}`, zIndex: -1}}/>) }\n\n            {/* <Orbit/> */}\n            {/* {surface ? <div>{characters[0]}</div>:<div></div>} */}\n            {/* {surface ? <div style={{position: \"relative\"}}>\n                <Characsel \n            characters={characters}\n            \n            \n            />\n             </div>: <div></div>} */}\n\n        </div>\n    )\n}\n\n\nexport default LevelTwo;","import React from 'react';\nimport '../Galaxy/Galaxy.css';\n\n// const props = {\n\n// }\n\nfunction Galaxy(props) {\n\treturn (\n\t\t<div className=''>\n\t\t\t<div className='galaxy row justify-content-around p-2'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='tatooine'\n\t\t\t\t\tdata-name='Tatooine'\n\t\t\t\t\tonClick={props.handlePlanetClick}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='coruscant'\n\t\t\t\t\tdata-name='Coruscant'\n\t\t\t\t\tonClick={props.handlePlanetClick}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='endor'\n\t\t\t\t\tdata-name='Naboo'\n\t\t\t\t\tonClick={props.handlePlanetClick}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='bespin'\n\t\t\t\t\tdata-name='Death Star'\n\t\t\t\t\tonClick={props.handlePlanetClick}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t\t<div className='row justify-content-around pt-3'>\n\t\t\t\t<button\n\t\t\t\t\tid='visit-btn'\n\t\t\t\t\tstyle={{ zIndex: 100 }}\n\t\t\t\t\tonClick={props.handleSurfaceClick}\n\t\t\t\t>\n\t\t\t\t\tVisit Planet\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Galaxy;\n","import React, { useEffect } from 'react';\nimport '../../Space Background/SpaceBackground'\nimport './Title.css';\n\n\nconst Title = () => {\n    useEffect(()=>{\n\n        \n\n// BACKGROUND\n\nvar canvas = document.createElement( 'canvas' );\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\nvar context = canvas.getContext( '2d' );\ncontext.fillStyle = 'rgb(0,0,0)';\ncontext.fillRect( 0, 0, canvas.width, canvas.height );\n\nvar brightness;\n\nvar brightnessB;\n\nvar starSize;\nvar starX;\nvar starY;\n\nfor ( var i = 0; i < 2400; i ++ ) \n{\n  brightness = Math.floor(Math.random() * 128);\n  brightnessB = Math.floor((Math.random() * 50 ) + 1);\n  \n  if (i%2 == 0) {\n    //white star\n    brightnessB = brightness;\n  }\n  else if (i%3 == 0) {\n    // blue star\n    brightnessB = brightnessB + brightness;\n  }\n  else {\n    // yellow star\n    brightnessB = brightness - brightnessB;\n  }\n  \n  //large stars every once in a while\n  if (i%25 == 0) {\n    starSize = Math.floor(Math.random() * 2) + 1;\n  }\n  else {\n    starSize = 1;\n  }\n  \n  var starColor = 'rgba(' + brightness + ',' + brightness + ',' + brightnessB + ',255)'; \n  \n  context.fillStyle = starColor;\n  \n  starX = Math.random() * canvas.width;\n  starY = Math.random() * canvas.height;\n  \n  context.fillRect( starX, starY, starSize, starSize );\n}\n\ndocument.body.style.background = 'url(' + canvas.toDataURL('image/png') + ')';\n\n    }, [])\n    \n    return (\n        <div style= {{position:\"\", alignItems: \"\", marginTop: \"27em\"}}>\n            <div className=\"starwars-demo \" >\n                <img src=\"//cssanimation.rocks/demo/starwars/images/star.svg\" alt=\"Star\" className=\"star\"></img>\n                    <img src=\"//cssanimation.rocks/demo/starwars/images/wars.svg\" alt=\"Wars\" className=\"wars\"></img>\n            </div>\n        </div>\n    );\n    \n}\n\nexport default Title\n","import React, { Suspense } from 'react';\nimport Title from './Title/Title';\n// import ByLine from \"./Byline\"\n\nconst ByLine = React.lazy(() => import('./Byline/ByLine'));\n\nconst Open = () => {\n\treturn (\n\t\t<div className='d-flex justify-content-center'>\n\t\t\t<div className=''>\n\t\t\t\t<a href='/profile'>\n\t\t\t\t\t<button className='btn btn-outline-warning'>Profile</button>\n\t\t\t\t</a>\n\t\t\t\t<a href='/Holodex'>\n\t\t\t\t\t<button className='btn btn-outline-warning'>Holodex</button>\n\t\t\t\t</a>\n\t\t\t\t<a href='/Archive'>\n\t\t\t\t\t<button className='btn btn-outline-warning'>Archives</button>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<Suspense\n\t\t\t\tfallback={\n                    <div>A long time ago, in a galaxy far, far away...</div>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<ByLine />\n\t\t\t</Suspense>\n            <Title />\n\t\t</div>\n\t);\n};\n\nexport default Open;\n","import React from 'react';\nimport ReactDom from 'react-dom';\n// import SpaceBackground from '../src/components/Space Background/SpaceBackground'\nimport { debounce } from 'debounce';\nimport Open from '../components/Open/Open';\n\nconst MODAL_STYLES = {\n\tposition: 'absolute',\n\twidth: '100%',\n\tHEIGHT: '100%',\n\t//   top: '50%',\n\t//   left: '50%',\n\t//   transform: 'translate(-50%, -50%)',\n\t//   backgroundColor: '#FFF',\n\t//   padding: '50px',\n\tzIndex: 1000,\n};\n\nconst OVERLAY_STYLES = {\n\tposition: 'fixed',\n\t// top: 2,\n\t// left: 2,\n\t// right: 8,\n\t// bottom: 8,\n\tbackgroundColor: 'rgba(0, 0, 0, .7)',\n\tzIndex: -1000,\n};\n\n// **************** START - LIGHT SPEED SCRIPT ********************* //\n\nconst { TweenMax, _ } = window;\n/**\n * Utility function for returning a random integer in a given range\n * @param {Int} max\n * @param {Int} min\n */\nconst randomInRange = (max, min) =>\n\tMath.floor(Math.random() * (max - min + 1)) + min;\nconst ACTIVE_PROBABILITY = 0;\nconst BASE_SIZE = 1;\nconst VELOCITY_INC = 1.01;\nconst VELOCITY_INIT_INC = 1.025;\nconst JUMP_VELOCITY_INC = 1.25;\nconst JUMP_SIZE_INC = 1.15;\nconst SIZE_INC = 1.01;\nconst RAD = Math.PI / 180;\nconst WARP_COLORS = [\n\t[197, 239, 247],\n\t[25, 181, 254],\n\t[77, 5, 232],\n\t[165, 55, 253],\n\t[255, 255, 255],\n];\n/**\n * Class for storing the particle metadata\n * position, size, length, speed etc.\n */\nclass Star {\n\tSTATE = {\n\t\talpha: Math.random(),\n\t\tangle: randomInRange(0, 360) * RAD,\n\t};\n\treset = () => {\n\t\tconst angle = randomInRange(0, 360) * (Math.PI / 180);\n\t\tconst vX = Math.cos(angle);\n\t\tconst vY = Math.sin(angle);\n\t\tconst travelled =\n\t\t\tMath.random() > 0.5\n\t\t\t\t? Math.random() *\n\t\t\t\t\t\tMath.max(window.innerWidth, window.innerHeight) +\n\t\t\t\t  Math.random() * (window.innerWidth * 0.24)\n\t\t\t\t: Math.random() * (window.innerWidth * 0.25);\n\t\tthis.STATE = {\n\t\t\t...this.STATE,\n\t\t\tiX: undefined,\n\t\t\tiY: undefined,\n\t\t\tactive: travelled ? true : false,\n\t\t\tx: Math.floor(vX * travelled) + window.innerWidth / 2,\n\t\t\tvX,\n\t\t\ty: Math.floor(vY * travelled) + window.innerHeight / 2,\n\t\t\tvY,\n\t\t\tsize: BASE_SIZE,\n\t\t};\n\t};\n\tconstructor() {\n\t\tthis.reset();\n\t}\n}\n\nconst generateStarPool = (size) => new Array(size).fill().map(() => new Star());\n\n// Class for the actual app\n// Not too much happens in here\n// Initiate the drawing process and listen for user interactions 👍\nclass JumpToHyperspace {\n\tSTATE = {\n\t\tstars: generateStarPool(300),\n\t\tbgAlpha: 0,\n\t\tsizeInc: SIZE_INC,\n\t\tvelocity: VELOCITY_INC,\n\t};\n\tcanvas = document.createElement('canvas');\n\t// canvas = canvas.width = window.innerWidth;\n\t// canvas = canvas.height = window.innerHeight;\n\n\tcontext = this.canvas.getContext('2d');\n\tconstructor() {\n\t\tthis.bind();\n\t\tthis.setup();\n\t\tdocument.body.appendChild(this.canvas);\n\t\tthis.render();\n\t}\n\trender = () => {\n\t\tconst {\n\t\t\tSTATE: { bgAlpha, velocity, sizeInc, initiating, jumping, stars },\n\t\t\tcontext,\n\t\t\trender,\n\t\t} = this;\n\t\t// Clear the canvas\n\t\tcontext.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\t\tif (bgAlpha > 0) {\n\t\t\tcontext.fillStyle = `rgba(31, 58, 157, ${bgAlpha})`;\n\t\t\tcontext.fillRect(0, 0, window.innerWidth, window.innerHeight);\n\t\t}\n\t\t// 1. Shall we add a new star\n\t\tconst nonActive = stars.filter((s) => !s.STATE.active);\n\t\tif (!initiating && nonActive.length > 0) {\n\t\t\t// Introduce a star\n\t\t\tnonActive[0].STATE.active = true;\n\t\t}\n\t\t// 2. Update the stars and draw them.\n\t\tfor (const star of stars.filter((s) => s.STATE.active)) {\n\t\t\tconst { active, x, y, iX, iY, iVX, iVY, size, vX, vY } = star.STATE;\n\t\t\t// Check if the star needs deactivating\n\t\t\tif (\n\t\t\t\t((iX || x) < 0 ||\n\t\t\t\t\t(iX || x) > window.innerWidth ||\n\t\t\t\t\t(iY || y) < 0 ||\n\t\t\t\t\t(iY || y) > window.innerHeight) &&\n\t\t\t\tactive &&\n\t\t\t\t!initiating\n\t\t\t) {\n\t\t\t\tstar.reset(true);\n\t\t\t} else if (active) {\n\t\t\t\tconst newIX = initiating ? iX : iX + iVX;\n\t\t\t\tconst newIY = initiating ? iY : iY + iVY;\n\t\t\t\tconst newX = x + vX;\n\t\t\t\tconst newY = y + vY;\n\t\t\t\t// Just need to work out if it overtakes the original line that's all\n\t\t\t\tconst caught =\n\t\t\t\t\t(vX < 0 && newIX < x) ||\n\t\t\t\t\t(vX > 0 && newIX > x) ||\n\t\t\t\t\t(vY < 0 && newIY < y) ||\n\t\t\t\t\t(vY > 0 && newIY > y);\n\t\t\t\tstar.STATE = {\n\t\t\t\t\t...star.STATE,\n\t\t\t\t\tiX: caught ? undefined : newIX,\n\t\t\t\t\tiY: caught ? undefined : newIY,\n\t\t\t\t\tiVX: caught ? undefined : iVX * VELOCITY_INIT_INC,\n\t\t\t\t\tiVY: caught ? undefined : iVY * VELOCITY_INIT_INC,\n\t\t\t\t\tx: newX,\n\t\t\t\t\tvX: star.STATE.vX * velocity,\n\t\t\t\t\ty: newY,\n\t\t\t\t\tvY: star.STATE.vY * velocity,\n\t\t\t\t\tsize: initiating\n\t\t\t\t\t\t? size\n\t\t\t\t\t\t: size * (iX || iY ? SIZE_INC : sizeInc),\n\t\t\t\t};\n\t\t\t\tlet color = `rgba(255, 255, 255, ${star.STATE.alpha})`;\n\t\t\t\tif (jumping) {\n\t\t\t\t\tconst [r, g, b] = WARP_COLORS[\n\t\t\t\t\t\trandomInRange(0, WARP_COLORS.length)\n\t\t\t\t\t];\n\t\t\t\t\tcolor = `rgba(${r}, ${g}, ${b}, ${star.STATE.alpha})`;\n\t\t\t\t}\n\t\t\t\tcontext.strokeStyle = color;\n\t\t\t\tcontext.lineWidth = size;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(star.STATE.iX || x, star.STATE.iY || y);\n\t\t\t\tcontext.lineTo(star.STATE.x, star.STATE.y);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(render);\n\t};\n\tinitiate = () => {\n\t\tif (this.STATE.jumping || this.STATE.initiating) return;\n\t\tthis.STATE = {\n\t\t\t...this.STATE,\n\t\t\tinitiating: true,\n\t\t\tinitiateTimestamp: new Date().getTime(),\n\t\t};\n\n\t\tTweenMax.to(this.STATE, 0.25, {\n\t\t\tvelocity: VELOCITY_INIT_INC,\n\t\t\tbgAlpha: 0.3,\n\t\t});\n\t\t// When we initiate, stop the XY origin from moving so that we draw\n\t\t// longer lines until the jump\n\t\tfor (const star of this.STATE.stars.filter((s) => s.STATE.active)) {\n\t\t\tstar.STATE = {\n\t\t\t\t...star.STATE,\n\t\t\t\tiX: star.STATE.x,\n\t\t\t\tiY: star.STATE.y,\n\t\t\t\tiVX: star.STATE.vX,\n\t\t\t\tiVY: star.STATE.vY,\n\t\t\t};\n\t\t}\n\t};\n\tjump = () => {\n\t\tthis.STATE = {\n\t\t\t...this.STATE,\n\t\t\tbgAlpha: 0,\n\t\t\tjumping: true,\n\t\t};\n\t\tTweenMax.to(this.STATE, 0.25, {\n\t\t\tvelocity: JUMP_VELOCITY_INC,\n\t\t\tbgAlpha: 0.75,\n\t\t\tsizeInc: JUMP_SIZE_INC,\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tthis.STATE = {\n\t\t\t\t...this.STATE,\n\t\t\t\tjumping: false,\n\t\t\t};\n\t\t\tTweenMax.to(this.STATE, 0.25, {\n\t\t\t\tbgAlpha: 0,\n\t\t\t\tvelocity: VELOCITY_INC,\n\t\t\t\tsizeInc: SIZE_INC,\n\t\t\t});\n\t\t}, 2000);\n\t};\n\tenter = () => {\n\t\tif (this.STATE.jumping) return;\n\t\tconst { initiateTimestamp } = this.STATE;\n\t\tthis.STATE = {\n\t\t\t...this.STATE,\n\t\t\tinitiating: false,\n\t\t\tinitiateTimestamp: undefined,\n\t\t};\n\t\tif (new Date().getTime() - initiateTimestamp > 600) {\n\t\t\tthis.jump();\n\t\t} else {\n\t\t\tTweenMax.to(this.STATE, 0.25, {\n\t\t\t\tvelocity: VELOCITY_INC,\n\t\t\t\tbgAlpha: 0,\n\t\t\t});\n\t\t}\n\t};\n\tbind = () => {\n\t\tthis.canvas.addEventListener('mousedown', this.initiate);\n\t\tthis.canvas.addEventListener('touchstart', this.initiate);\n\t\tthis.canvas.addEventListener('mouseup', this.enter);\n\t\tthis.canvas.addEventListener('touchend', this.enter);\n\t\t<Open />;\n\t};\n\tsetup = () => {\n\t\tthis.context.lineCap = 'round';\n\t\tthis.canvas.height = window.innerHeight;\n\t\tthis.canvas.width = window.innerWidth;\n\t};\n\treset = () => {\n\t\tthis.STATE = {\n\t\t\t...this.STATE,\n\t\t\tstars: generateStarPool(300),\n\t\t};\n\t\tthis.setup();\n\t};\n\tclick = (e) => {\n\t\tthis.canvas.addEventListener('click', this.initiate);\n\t};\n}\nwindow.myJump = new JumpToHyperspace();\nwindow.addEventListener(\n\t'visit-btn',\n\tdebounce(() => {\n\t\twindow.myJump.reset();\n\t}, 250)\n);\n\n// **************** END - LIGHT SPEED SCRIPT ********************* //\n\nexport default function Modal({ open, children, onClose }) {\n\tif (!open) return null;\n\n\treturn ReactDom.createPortal(\n\t\t<div className='row p-5'>\n\t\t\t<div className='' style={OVERLAY_STYLES} />\n\t\t\t<div className='' style={MODAL_STYLES}>\n\t\t\t\t{/* <Open /> */}\n\t\t\t\t{/* <Open \n\t\t/> */}\n\t\t\t\t<button className='btn btn-outline-warning' onClick={onClose}>\n\t\t\t\t\tClose Holodex\n\t\t\t\t</button>\n\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>,\n\t\tdocument.getElementById('portal')\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport API from '../utils/Api';\nimport Characters from '../components/Characters';\nimport Planets from '../components/Planets/';\nimport LevelTwo from '../components/Planet/Leveltwo';\nimport Planet from '../components/Planet';\nimport Galaxy from '../components/Galaxy/Galaxy';\nimport LevelThree from '../components/Planet/Levelthree';\nimport Modal from '../components/Modal';\nimport Orbit from '../components/Orbit/Orbit';\nimport Characsel from '../components/Carousel'\nimport Democarousel from '../components/Carousel'\n\n// import { debounce } from 'debounce';\n// import Surface\n\nconst BUTTON_WRAPPER_STYLES = {\n\t// position: 'relative',\n\t// zIndex: 1,\n};\n\nconst OTHER_CONTENT_STYLES = {\n\t// position: 'relative',\n\t// zIndex: 2,\n\t// backgroundColor: 'red',\n\t// padding: '10px',\n};\n\nfunction Home() {\n\tconst [planet, setPlanet] = useState([]);\n\tconst [planets, setPlanets] = useState([]);\n\tconst [characters, setCharacters] = useState([]);\n\tconst [surface, setSurface] = useState('');\n\t// const [loading, setLoading] = useState(false)\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetPlanet();\n\t\tgetCharacters();\n\t\t// setLoading(true)\n\t\t// loadPlanets()\n\t}, [planet]);\n\n\tconst handlePlanetClick = (e) => {\n\t\tconst planetName = e.target.getAttribute('data-name');\n\t\tconsole.log(planetName);\n\t\tsetPlanet(planetName);\n\t\tsetSurface(null);\n\t};\n\tconst getPlanet = () => {\n\t\t// console.log(name)\n\t\tAPI.getPlanet(planet)\n\t\t\t.then((res) => {\n\t\t\t\tsetPlanets(res.data);\n\t\t\t})\n\t\t\t.catch(() => setPlanets([]));\n\t};\n\n\tconst getCharacters = () => {\n\t\tAPI.getPlanet(planet)\n\t\t\t.then((res) => {\n\t\t\t\tsetCharacters(res.data.characters);\n\t\t\t\tconsole.log(res.data.characters);\n\t\t\t})\n\t\t\t.catch(() => setCharacters([]));\n\t};\n\n\tconst handleSurfaceClick = () => {\n\t\tsetSurface(planets.surface_img);\n\t\tconsole.log(planets) \n\t};\n\n\t// if(loading) {\n\t//   return <p>Data is loading...</p>\n\t// }\n\n\t// const loadPlanets = () => {\n\t//   API.getPlanets()\n\t//   .then(res => {\n\t//     setPlanets(res.data)\n\t//   })\n\t//   .catch(() => setPlanets([]))\n\t// }\n\n\treturn (\n\t\t<div className='row justify-content-center'>\n\t\t\t<div className='p-5'\n\t\t\t\t// style={BUTTON_WRAPPER_STYLES}\n\t\t\t\tonClick={() => console.log('clicked')}\n\t\t\t>\n\t\t\t\t<button className='btn btn-outline-warning' onClick={() => setIsOpen(true)}>HOLODEX</button>\n\n\t\t\t\t{/* <a href=\"/Open\"><button>Open</button></a> */}\n\t\t\t\t\t<a href=\"/profile\"><button className='btn btn-outline-warning'>Profile</button></a>\n\t\t\t\t\t<a href=\"/archive\"><button className='btn btn-outline-warning'>Archives</button></a>\n\t\t\t\t<Modal open={isOpen} onClose={() => setIsOpen(false)}>\n\n\t\t\t\t<div className='viewport container border border-5 border-info mt-3 p-2 shadow-lg'>\n\t\t\t\t\t<div className='row m-3 justify-content-between'>\n\t\t\t\t\t\t<main className='One border border-info rounded-top col-12'>\n\t\t\t\t\t\t\t<LevelTwo\n\t\t\t\t\t\t\t\timg={planets.img}\n\t\t\t\t\t\t\t\tsurface={surface}\n\t\t\t\t\t\t\t\tcharacters={characters}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* <Characsel /> */}\n\t\t\t\t\t\t\t{/* <Orbit/> */}\n\t\t\t\t\t\t</main>\n\t\t\t\t\t\t<div className='Two border border-info rounded-pill p-2 mt-3 col-6 '>\n\t\t\t\t\t\t\t<Galaxy\n\t\t\t\t\t\t\t\thandlePlanetClick={handlePlanetClick}\n\t\t\t\t\t\t\t\thandleSurfaceClick={handleSurfaceClick}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='Three border border-info overflow-auto p-3 mt-3  col-5'>\n\t\t\t\t\t\t\t<LevelTwo\n\t\t\t\t\t\t\t\tname={planets.name}\n\t\t\t\t\t\t\t\tdiameter={planets.diameter}\n\t\t\t\t\t\t\t\trotation_period={planets.rotation_period}\n\t\t\t\t\t\t\t\torbital_period={planets.orbital_period}\n\t\t\t\t\t\t\t\tplanet_info={planets.planet_info}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{characters ? (\n\t\t\t\t\t\t\t\tcharacters.map((character) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<LevelThree\n\t\t\t\t\t\t\t\t\t\t\tkey={character.name}\n\t\t\t\t\t\t\t\t\t\t\tname={character.name}\n\t\t\t\t\t\t\t\t\t\t\timage={character.image}\n\t\t\t\t\t\t\t\t\t\t\tbirth_year={character.birth_year}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</Modal>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\n// import { useParams } from \"react-router-dom\";\nimport API from '../utils/Api';\nimport LevelTwo from '../components/Planet/Leveltwo';\n\nfunction Leveltwo() {\n\t// const { name } = useParams()\n\tconst [planet, setPlanet] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetPlanet();\n\t\tconsole.log();\n\t}, []);\n\n\tconst getPlanet = () => {\n\t\t// console.log(name)\n\t\tAPI.getPlanet()\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetPlanet(res.data);\n\t\t\t})\n\t\t\t.catch(() => setPlanet([]));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<LevelTwo img={planet.img} />\n\t\t\t<LevelTwo\n\t\t\t\tname={planet.name}\n\t\t\t\t// diameter={planet.diameter}\n\t\t\t\t// rotation_period={planet.rotation_period}\n\t\t\t\t// orbital_period={planet.orbital_period}\n\t\t\t\tplanet_info={planet.planet_info}\n\t\t\t/>\n\t\t\t{/* {planet.name} <br />\n                {planet.diameter} <br/>\n                {planet.rotation_period}<br /> \n                {planet.orbital_period}<br /> \n                {planet.planet_info} <br />\n                {planet.img} */}\n\t\t\t{/* /* {img ? (<img src={`/${img}`} />) : (<div />) } */}\n\t\t</div>\n\t);\n}\n\nexport default Leveltwo;\n","import Open from \"../components/Open/Open\";\nimport React from \"react\";\nimport '../components/Open/Title/Title.css'\n\nfunction openApp() {\n    return  <Open />;\n}\n\nexport default openApp;","import React, { useState, useEffect } from 'react';\n// import { useParams } from \"react-router-dom\";\nimport API from '../utils/Api';\nimport LevelThree from '../components/Planet/Levelthree';\n\nfunction Levelthree() {\n\t// const { name } = useParams()\n\tconst [planChar, setPlanChar] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetPlanet();\n\t\tconsole.log('where u at');\n\t}, []);\n\n\tconst getPlanet = () => {\n\t\tconsole.log('dis tim');\n\t\tAPI.getPlanet('')\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetPlanChar(res.data.characters);\n\t\t\t})\n\t\t\t.catch(() => setPlanChar([]));\n\t};\n\tconsole.log(planChar);\n\n\treturn (\n\t\t<div>\n\t\t\t{planChar.map((character) => {\n\t\t\t\treturn (\n\t\t\t\t\t<LevelThree\n\t\t\t\t\t\tkey={character.name}\n\t\t\t\t\t\tname={character.name}\n\t\t\t\t\t\timage={character.image}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n}\n\nexport default Levelthree;\n","import React from \"react\";\n\nfunction SignupButton() {\n  return (\n    <a role=\"button\" className=\"btn btn-outline-warning\" href=\"/signup\">Sign Up</a>\n  );\n}\n\nexport default SignupButton;","import React from \"react\";\n\nfunction LoginButton() {\n  return (\n    <a type=\"button\" className=\"btn btn-outline-warning\" href=\"/login\">Login</a>\n  );\n}\n\nexport default LoginButton;","import React from 'react';\nimport SignupButton from '../components/SignupButton';\nimport LoginButton from '../components/LoginButton';\n// import SignupForm from '../components/Signup';\n// import LoginForm from '../components/Login';\n\n\nfunction Profile(){\n\n  const logout = () => {\n    console.log('Logging out user!');\n    fetch('/api/users/logout',{\n        method: 'POST',\n        body: JSON.stringify({}),\n        headers: { 'Content-Type': 'application/json' }\n    }).then((response)=>{\n        \n        return response;\n    }).then((data)=>{\n        document.location.replace('/profile');\n        return data;\n    });\n}\n\n// const checkLoggedIn = () => {\n//   fetch('/api/users/check', {\n//     method: 'GET',\n//     body: JSON.stringify({}),\n//     headers: { 'Content-Type': 'application/json' }\n//   }).then((response) => {\n//     return response;\n//   })\n// } \n\nreturn (\n<div>\n{/* nav bar  */}\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href=\"#\">Profile</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n          </li>\n        </ul>\n        <form className=\"d-flex\">\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  </nav>\n{/* Profile Image Card */}\n\n\n\n  <div className=\"card bg-dark text-white\" >\n    <div className=\"card-body\">\n    <div className=\"d-flex flex-column align-items-center text-center\">\n            <img src=\"\" alt=\"Admin\" className=\"img-fluid img-thumbnail\"/>\n            <div className=\"file btn btn-lg btn-primary\">\n                Change Photo\n              <input type=\"file\" name=\"file\"/>\n            </div>\n\n            <div className=\"mt-3\">\n              <h4>Wookie Man 420</h4>\n              <p className=\"text-secondary mb-1\">Jedi Master</p>\n              <p className=\"text-muted font-size-sm\">Bay Area, San Francisco, CA</p>\n              <button className=\"align-center mb-3\" onClick={logout}>Log Out</button>\n            </div>\n      </div>\n    </div>\n        <SignupButton></SignupButton>\n        <LoginButton></LoginButton>\n  </div>\n\n{/* Form Area */}\n<form className=\"row g-3\">\n  <div className=\"col-md-6\">\n    <label for=\"inputEmail4\" className=\"form-label\">Email</label>\n    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\"/>\n  </div>\n  <div className=\"col-md-6\">\n    <label for=\"inputPassword4\" className=\"form-label\">Password</label>\n    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\"/>\n  </div>\n  <div className=\"col-12\">\n    <label for=\"inputAddress\" className=\"form-label\">Address</label>\n    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\"/>\n  </div>\n  <div className=\"col-12\">\n    <label for=\"inputAddress2\" className=\"form-label\">Address 2</label>\n    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\"/>\n  </div>\n  <div className=\"col-md-6\">\n    <label for=\"inputCity\" className=\"form-label\">City</label>\n    <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\n  </div>\n  <div className=\"col-md-2\">\n    <label for=\"inputZip\" className=\"form-label\">Zip</label>\n    <input type=\"text\" className=\"form-control\" id=\"inputZip\"/>\n  </div>\n\n  <div className=\"col-12\">\n    <button type=\"submit\" className=\"btn btn-primary\">Edit Information</button>\n  </div>\n</form>\n\n    \n\n        \n</div>\n\n        \n\n)}\n\nexport default Profile;\n","import React, { useState} from \"react\";\n\nfunction SignupForm() {\n\n  const [signupState, setSignupState] = useState({\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n  });\n\n  const signupUser = (e) => {\n    e.preventDefault();\n    // console.log(signupInputState);\n    if(signupState.username===''){\n      alert('Please enter a username');\n      return;\n    }\n    if(signupState.email===''){\n      alert('Please enter an email');\n      return;\n    }\n    if(signupState.password===''){\n      alert('Please enter an password');\n      return;\n    }\n    if(signupState.confirmPassword===''){\n      alert('Please re-enter your password');\n      return;\n    }\n    if(signupState.password !== signupState.confirmPassword){\n      alert('Please make sure your passwords match')\n      return;\n    }\n\n    let newUserInfo = {\n      username: signupState.username,\n      password: signupState.password,\n      email: signupState.email,\n    }\n\n    fetch('/api/users', {\n      method: 'POST',\n      body: JSON.stringify(newUserInfo),\n      headers: { 'Content-Type': 'application/json' },\n    }).then((response) => {\n      return response.json();\n    }).then((data) => {\n        console.log(data);\n        loginUser(data);\n    });\n  }\n\n  function loginUser(userInfo) {\n    console.log('Logging new user!');\n    console.log(userInfo);\n    fetch('/api/users/login', {\n      method: 'POST',\n      body: JSON.stringify(userInfo),\n      headers: { 'Content-Type': 'application/json' },\n    }).then((response) => {\n      console.log(response);\n      if(response.status === 422 || response.status === 400){\n        alert('Failed to login!');\n      } else if (response.status === 200){\n        console.log('User logged in!');\n        document.location.replace('/profile');\n      }\n      return response;\n    }).then((data) => {\n      return data;\n    });\n  }\n\n\n  return (\n            <div className=\"d-flex justify-content-center align-items-center flex-column mb-1\">\n                <h3 className=\"mt-3\">Sign Up</h3>\n                <form className=\"form d-flex justify-content-center align-items-center flex-column mb-1\">\n                    <input\n                        name=\"username\"\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        className=\"text-center\"\n                        onChange={(e) => {\n                            setSignupState({\n                                ...signupState,\n                                username: e.target.value\n                            })\n                        }}\n                    />\n                    <input\n                        name=\"email\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        className=\"text-center\"\n                        onChange={(e) => {\n                            setSignupState({\n                                ...signupState,\n                                email: e.target.value\n                            })\n                        }}\n                    />\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        className=\"text-center\"\n                        onChange={(e) => {\n                            setSignupState({\n                                ...signupState,\n                                password: e.target.value\n                            })\n                        }}\n                    />\n                    <input\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        className=\"text-center\"\n                        onChange={(e) => {\n                            setSignupState({\n                                ...signupState,\n                                confirmPassword: e.target.value\n                            })\n                        }}\n                    />\n                    <button className=\"mb-3 mt-2 btn btn-outline-warning\" onClick={signupUser}>Sign Up</button>\n                </form>\n            </div>\n  );\n}\n\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\n\nfunction LoginForm() {\n    const [loginState, setLoginState] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    useEffect(() => {}, [loginState]);\n\n    function loginUser() {\n        console.log('Logging in user.');\n        console.log(loginState);\n        fetch('/api/users/login', {\n            method: \"POST\",\n            body: JSON.stringify(loginState),\n            headers: { 'Content-Type': 'application/json' },\n        }).then((response) => {\n            console.log(response);\n            if (response.status === 422 || response.status === 400) {\n                alert(\"Failed to login!\");\n            } else if (response.status === 200) {\n                console.log('User logged in!');\n                document.location.replace('/profile');\n            }\n            return response;\n        }).then((data) => {\n            return data;\n        });\n    }\n\n    return (\n        <div>\n                    <div className=\"d-flex justify-content-center align-items-center flex-column\">\n                        <h3 className=\"mt-3\">Login</h3>\n                        <form className=\"form d-flex justify-content-center align-items-center flex-column mb-1\">\n                            <input \n                                name=\"username\" \n                                type=\"text\" \n                                placeholder=\"Email\" \n                                className=\"text-center\"\n                                onChange={(e) => {\n                                    setLoginState({\n                                        ...loginState,\n                                        email: e.target.value\n                                    })\n                                }}\n                            />\n                            <input \n                                name=\"password\"\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                className=\"text-center\"\n                                onChange={(e) => {\n                                    setLoginState({\n                                        ...loginState,\n                                        password: e.target.value\n                                    })\n                                }}\n                            />\n                            <button onClick={(e) => {\n                                e.preventDefault();\n                                loginUser();\n                            }} className=\"mb-3 mt-2 btn btn-outline-warning\">Login</button>\n                        </form>\n                    </div>\n        </div>\n    );\n\n}\n\nexport default LoginForm;","import React from \"react\";\r\n\r\nfunction Charchive({ name, image, description, birth_year, mass, height, planet_name, eye_color, skin_color, hair_color }) {\r\n    return (\r\n    <div>\r\n        <br />\r\n        <h3>Name: {name}</h3> <br />\r\n        {image ? (<img src={`/${image}`} style={{height: \"500px\", width: \"250px\"}}alt=''/>) : (<div />)}<br />\r\n        Birth year: {birth_year} < br/>\r\n        {description} <br />\r\n        Mass: {mass}<br />\r\n        Tracked Location: {planet_name} <br />\r\n        Height: {height} <br />\r\n        Eye Color: {eye_color}<br />\r\n        Skin Color: {skin_color}<br />\r\n        Hair Color: {hair_color}<br /><br />\r\n        \r\n    </div>\r\n    )\r\n}\r\nexport default Charchive;","import React from \"react\";\r\n\r\nfunction Planetarchive({ name, description, rotation_period, orbital_period, diameter, climate, gravity, terrain, surface_water, population, planet_info, img }) {\r\n    return (\r\n    <div>\r\n        <h3>Planet Name: {name}</h3><br />\r\n        {img ? (<img src={`/${img}`}  style={{height:\"200px\", width: \"200px\"}} alt=''/>) : (<div />) }<br />< br />\r\n        Rotation Period: {rotation_period}<br />\r\n        Orbital Period: {orbital_period}<br />\r\n        Diameter: {diameter}<br />\r\n        Climate: {climate}<br />\r\n        Gravity: {gravity}<br />\r\n        Terrain: {terrain}<br />\r\n        Surface Water: {surface_water}<br />\r\n        Population: {population}<br />\r\n        Description: {description}<br />\r\n        Planet Info: {planet_info}<br /><br />\r\n    \r\n    </div>\r\n    )\r\n}\r\nexport default Planetarchive;","import React, { useState, useEffect } from 'react';\nimport API from '../utils/Api';\nimport Characters from '../components/Characters';\nimport Planets from '../components/Planets/';\nimport LevelTwo from '../components/Planet/Leveltwo';\nimport Planet from '../components/Planet';\nimport Galaxy from '../components/Galaxy/Galaxy';\nimport LevelThree from '../components/Planet/Levelthree';\nimport Modal from '../components/Modal';\nimport Charchive from '../components/Archive';\nimport Planetarchive from '../components/PlanetArchive'\nimport Search from '../components/Search'\n\nconst BUTTON_WRAPPER_STYLES = {\n\t// position: 'relative',\n\t// zIndex: 1,\n};\n\nconst OTHER_CONTENT_STYLES = {\n\t// position: 'relative',\n\t// zIndex: 2,\n\t// backgroundColor: 'red',\n\t// padding: '10px',\n};\n\nfunction Archive() {\n\tconst [planet, setPlanet] = useState([]);\n\tconst [planets, setPlanets] = useState([]);\n\tconst [characters, setCharacters] = useState([]);\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetPlanets();\n\t\tgetCharacters();\n\t}, [planet]);\n\n\tconst getPlanets = () => {\n\t\t// console.log(name)\n\t\tAPI.getPlanets()\n\t\t\t.then((res) => {\n\t\t\t\tsetPlanets(res.data);\n                console.log(res.data)\n\t\t\t})\n\t\t\t.catch(() => setPlanets([]));\n\t};\n\n\tconst getCharacters = () => {\n\t\tAPI.getCharacters()\n\t\t\t.then((res) => {\n\t\t\t\tsetCharacters(res.data);\n\t\t\t\tconsole.log(res.data);\n\t\t\t})\n\t\t\t.catch(() => setCharacters([]));\n\t};\n\n\n\treturn (\n\t\t<div className='row justify-content-center'>\n\t\t\t<div className='p-5'\n\t\t\t\t// style={BUTTON_WRAPPER_STYLES}\n\t\t\t\tonClick={() => console.log('clicked')}\n\t\t\t>\n\t\t\t\t<button className='btn btn-outline-warning' onClick={() => setIsOpen(true)}>Access Archives</button>\n\n\t\t\t\t{/* <a href=\"/Open\"><button>Open</button></a> */}\n\t\t\t\t\t<a href=\"/holodex\"><button className='btn btn-outline-warning'>Holodex</button></a>\n\t\t\t\t<Modal open={isOpen} onClose={() => setIsOpen(false)}>\n\n\t\t\t\t<div className='viewport container border border-5 border-info mt-3 p-2 shadow-lg'>\n\t\t\t\t\t<div className='row m-3 justify-content-between'>\n\t\t\t\t\t\t<main className='One border border-info rounded-top col-12' style={{color: \"white\", textAlign: \"center\"}}>\n                        \n\t\t\t\t\t\t\t{characters ? (\n\t\t\t\t\t\t\t\tcharacters.map((character) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Charchive\n\t\t\t\t\t\t\t\t\t\t\tkey={character.name}\n\t\t\t\t\t\t\t\t\t\t\tname={character.name}\n\t\t\t\t\t\t\t\t\t\t\timage={character.image}\n\t\t\t\t\t\t\t\t\t\t\tdescription={character.description}\n\t\t\t\t\t\t\t\t\t\t\tbirth_year={character.birth_year}\n                                            mass={character.mass}\n                                            planet_name={character.planet_name}\n                                            skin_color={character.skin_color}\n                                            hair_color={character.hair_color}\n                                            eye_color={character.eye_color}\n                                            height={character.height}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t)}\n                            \n                                {planets ? (\n                                    planets.map((plan) => {\n                                        return (\n                                            <Planetarchive \n                                            key={plan.name}\n                                            name={plan.name}\n                                            rotation_period={plan.rotation_period}\n                                            orbital_period={plan.orbital_period}\n                                            diameter={plan.diameter}\n                                            climate={plan.climate}\n                                            gravity={plan.gravity}\n                                            terrain={plan.terrain}\n                                            surface_water={plan.surface_water}\n                                            population={plan.population}\n                                            description={plan.description}\n                                            planet_info={plan.planet_info}\n                                            img={plan.img}\n                                            />\n                                        );\n                                    })\n                                ) : (<div></div>)}\n\t\t\t\t\t\t</main>\n\n\n                        <div>\n                            </div>\n                            <div>\n                            </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</Modal>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Archive;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Leveltwo from \"./pages/Leveltwo\";\nimport openApp from \"./pages/Open\"\nimport Levelthree from \"./pages/Levelthree\"\nimport './App.css'\nimport Profile from \"./pages/Profile\";\nimport Trials from \"./pages/Trials\"\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Archive from \"./pages/Archive\"\n\nfunction App() {\n  return(\n    <Router>\n      <div className='container-fluid'>\n        <Switch>\n          <Route exact path=\"/Holodex\" component={Home} />\n          <Route exact path=\"/\" component={openApp} />\n          {/* <Route exact path=\"/planet/levelone/:name\" component={Levelone} /> */}\n          <Route exact path=\"/planet/leveltwo/:name\" component={Leveltwo} />\n          <Route exact path=\"/planet/levelthree/:name\" component={Levelthree} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/Archive\" component={Archive} />\n          <Route exact path=\"/Trials\" component={Trials} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/Signup\" component={Signup} />\n\n        </Switch>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n\n// *******\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import React from 'react';\n\n// import Luke from \"./components/Characters/Luke\"\n// function App() {\n//   const [people, setPeople] = useState([]);\n//   const [starships, setStarShips] = useState([]);\n\n//   useEffect(() => {\n//     async function getChar() {\n//       let res = await fetch('https://swapi.dev/api/planets/?page=2');\n//       let data = await res.json();\n//       setPeople(data.results);\n//       console.log(data)\n//     }\n//     async function getStarShips() {\n//       let res = await fetch('https://swapi.dev/api/starships/?page=1');\n//     async function getPlanets() {\n\n//       let res = await fetch('https://swapi.dev/api/planets/?page=5');\n\n//       let res = await fetch('https://swapi.dev/api/planets/?page=3');\n\n//       let data = await res.json();\n//       setStarShips(data.results);\n//       console.log(data)\n\n//     }\n//     getChar();\n//     getStarShips();\n//   }, []);\n//   console.log('data', people)\n//   console.log('data', starships)\n\n  // fetch('https://swapi.dev/api/planets/')\n  // .then(response => response.json())\n  // .then(data => console.log(data)\n  // )\n  \n  \n \n  \n//   return(\n//     <div className=\"one\">\n//       {starships.map(starships => (\n//         <div>\n//           <br />\n//           pppp <br /><br />\n//          \"climate\": \"{planets.climate}\", <br />\n//          \"surface_water\": \"{planets.surface_water}\", <br />\n//          \"name\": \"{planets.name}\", <br />\n//          \"diameter\": \"{planets.diameter}\", <br />\n//          \"rotation_period\": \"{planets.rotation_period} \", <br />\n//          \"terrain\": \"{planets.terrain}\", <br />\n//          \"gravity\": \"{planets.gravity} \", <br />\n//          \"orbital_period\": \"{planets.orbital_period}\", <br />\n//          \"population\": \"{planets.population}\" <br />\n//          dddd\n//         </div>\n//       ))}\n//       {/* {JSON.stringify(planets)} */}\n//     </div>\n//   )\n// }\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts/Starjedi.ttf';\nimport './fonts/AurekBeshNarrow-xxlK.ttf';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n// import Carousel from '../components/Carousel'\n// import Democarousel from '../components/Carousel'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(<DemoCarousel />, document.querySelector('.demo-carousel'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}